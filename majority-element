class Solution {
    public int majorityElement(int[] nums) {
        int l=nums.length;
        int n=l;
        
        if((l==1)||(l==2))
            return nums[0];
        
        if(n%2!=0)
            n+=1;
        n/=2;
        
        
        Arrays.sort(nums);
        int c=1;
        List<Integer> list1=new ArrayList<Integer>();
        List<Integer> list2=new ArrayList<Integer>();
        
        for(int i=0;i<l-1;i++)
        {
            if(nums[i]==nums[i+1])
            {
                c++;
                if(i==(l-2))
                {
                     list1.add(nums[i]);
                     list2.add(c);
                     c=1;
                }
            }
            else
            {
                list1.add(nums[i]);
                list2.add(c);
                c=1;
            }
        }
        
        int a[]=new int[list1.size()];
        int b[]=new int[list1.size()];
        for(int j=0;j<list1.size();j++)
        {
            a[j]=list1.get(j);
            b[j]=list2.get(j);
        }
        
        int f=0;
        for(int y=0;y<a.length;y++)
            if((b[y]>n)||(b[y]==n))
                f=a[y];
        return f;
    }
}
